service: ${opt:product}
provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage} #read from console input
  region: ${opt:region}
  memorySize: 128 # Overwrite the default memory size. Default is 1024
  timeout: 100 #default is 6
  environment:
    awsRegion: ${opt:region}
    storageTableName: ${opt:stage}-storage
  versionFunctions: false
  stackTags:
   Environment: ${opt:stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchGetItem 
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.storageTableName}*"
functions:
  Api: 
    name: ${opt:product}-${opt:stage}-api
    handler: build/src/lambda.handler
    package:
      include:
        - build/src/**
        - node_modules/**
    environment:
      sampleKey: 'sampleValue'
    events:
      - http:
          path: /{proxy+}
          method: any
          cors:
              origins:
                - '*'
              headers:
                - Content-Type
                - X-Amz-Date
                - Authorization
                - X-Api-Key
                - X-Amz-Security-Token
              allowCredentials: true

# The "Resources" your "Functions" use.  Raw AWS CloudFormation goes in here.
resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${opt:stage}-storage
        AttributeDefinitions:
          - AttributeName: Id
            AttributeType: S
        KeySchema:
          - AttributeName: Id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    